
17. Consuming ASP NET Web Service in AngularJS using $http

	*SQL Create a new database named AngularDb17

	Run this query

		Create table tblEmployees
		(
    			Id int primary key identity,
    			Name nvarchar(50),
    			Gender nvarchar(10),
    			Salary int
		)
		Go

		Insert into tblEmployees values ('Ben', 'Male', 55000)
		Insert into tblEmployees values ('Sara', 'Female', 68000)
		Insert into tblEmployees values ('Mark', 'Male', 57000)
		Insert into tblEmployees values ('Pam', 'Female', 53000)
		Insert into tblEmployees values ('Todd', 'Male', 60000)
		Go

	*BACKEND Create a new ASP.NET Web Application (Empty) project
		
	Add this connection string under configuration tag on Web.config
		
  		<connectionStrings>
    			<add name="DBCS"
         			connectionString="server=DESKTOP-UHUV6UP\SQLEXPRESS01;database=AngularDb17; integrated security=SSPI"/>
  		</connectionStrings>

	And this INSIDE system.web tag on Web.config

		 <webServices>
      			<protocols>
        			<add name="HttpGet"/>
      			</protocols>
    		</webServices>

	Put also this on Web.config		
  		<system.webServer>
    			<httpProtocol>
      				<customHeaders>
        				<add name="Access-Control-Allow-Origin" value="*"/>
      				</customHeaders>
    			</httpProtocol>
  		</system.webServer>

	Add a new class named Employee with those fields
		
    		public class Employee
    		{
        		public int id { get; set; }
        		public string name { get; set; }
        		public string gender { get; set; }
        		public int salary { get; set; }
    		}

	On backend create a new web service named EmployeeService and add this method (Don't forget the annotation)
		
        	[WebMethod]
        	public void GetAllEmployees()
        	{
            		List<Employee> listEmployees = new List<Employee>();

            		string cs = ConfigurationManager.ConnectionStrings["DBCS"].ConnectionString;
            		using (SqlConnection con = new SqlConnection(cs))
            		{
                		SqlCommand cmd = new SqlCommand("Select * from tblEmployees", con);
                		con.Open();
                		SqlDataReader rdr = cmd.ExecuteReader();
                		while (rdr.Read())
                		{
                    			Employee employee = new Employee();
                    			employee.id = Convert.ToInt32(rdr["Id"]);
                    			employee.name = rdr["Name"].ToString();
                    			employee.gender = rdr["Gender"].ToString();
                    			employee.salary = Convert.ToInt32(rdr["Salary"]);
                    			listEmployees.Add(employee);
                		}
            		}

            		JavaScriptSerializer js = new JavaScriptSerializer();
            		Context.Response.Write(js.Serialize(listEmployees));
        	}

	*FRONTEND On app.js add this code

		var app = angular
        		.module("myModule", [])
        		.controller("myController", function ($scope, $http) {

            		$http.get("EmployeeService.asmx/GetAllEmployees")
                 		.then(function (response) {
                     			$scope.employees = response.data;
                 		});
        	});

	Add also this code on index.html
	
		<body ng-app="myModule">
    			<div ng-controller="myController">
        			<table>
            				<thead>
                				<tr>
                    					<th>Id</th>
                    					<th>Name</th>
                    					<th>Gender</th>
                    					<th>Salary</th>
                				</tr>
            				</thead>
            				<tbody>
                				<tr ng-repeat="employee in employees">
                    					<td>{{employee.id}}</td>
                    					<td>{{employee.name}}</td>
                    					<td>{{employee.gender}}</td>
                    					<td>{{employee.salary}}</td>
                				</tr>
            				</tbody>
        			</table>
    			</div>
		</body>

	* See more on the project (Backend) If you need to seperate it into two projects you have to configure the cors policy